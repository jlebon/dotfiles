#!/bin/bash
set -euo pipefail

## Navigation:
## 
## Select up/down                   Ctrl-K, Ctrl-J
## Scroll commits up/down           Ctrl-U, Ctrl-D
## Scroll preview up/down           Alt-U, Alt-D
## Scroll preview up/down one line  Alt-Y, Alt-E
## 
## Files:
## 
## View file in pager                 Ctrl-Space
## Edit files, keeping fzf            Enter
## Edit files, exiting fzf            Alt-Enter
## Copy filenames to tmux and stdout  Ctrl-F
## 
## Browser:
## 
## Open permalink in browser  Ctrl-P
## 
## Misc:
## 
## Show this help                         F1
## Change preview location                F2
## Toggle preview                         Ctrl-/
## Enter fuzzy-search mode                Ctrl-S
## Exit fuzzy-search mode                 Ctrl-R
## Modify rg arguments                    Ctrl-X

# Based on https://github.com/junegunn/fzf/issues/1750#issue-521031164.

q=${1:-}; shift || :

STATE_DIR=$XDG_RUNTIME_DIR/$$
trap 'rm -f $STATE_DIR.*' EXIT

# rg regex query
Q=$STATE_DIR.q
echo -n "${q}" > "$Q"

# rg CLI args
R=$STATE_DIR.r
# default args we let users change
echo "-g !.git -g !vendor -g !worktrees --hidden --trim --smart-case" "$@" > "$R"
# define rg command, include args we need to function correctly
RG="rg --column --line-number --no-heading --color=always \$(cat $R)"
tmux=true

if [ -n "${TMUX:-}" ]; then
    tmux=tmux
fi

# XXX: if COLUMNS is beneath a certain threshold, open with preview pane off
# by default

# XXX: binding for showing commit that introduced line

# We use FZF_DEFAULT_COMMAND instead of piping so that the command is owned
# and interruptable by fzf and so that stdout is still a terminal (for e.g.
# less, editors) and so that it's a variable we can easily refer to in reload
# functions. The `[ ! -s $Q ]` syntax is so we don't search if the query is
# empty since it would just be every line in every file. The `$? = 1` syntax is
# so fzf doesn't report an error if rg finds nothing (but does if it's e.g. an
# incorrect flag argument).
export FZF_DEFAULT_COMMAND="[ ! -s $Q ] || $RG -f $Q || [ \$? = 1 ]"

fzf --ansi --disabled -m -d : \
  --bind "change:execute-silent(echo -n {q} > $Q)" --query "$q" --prompt 'regex> ' \
  --bind "change:+reload:$FZF_DEFAULT_COMMAND" \
  --preview 'bat --plain --color always --highlight-line {2} {1}' --preview-window '+{2}/2' \
  --bind 'f2:change-preview-window(down|right)' \
  --bind 'ctrl-d:half-page-down,ctrl-u:half-page-up' \
  --bind 'alt-e:preview-down,alt-y:preview-up,alt-d:preview-half-page-down,alt-u:preview-half-page-up' \
  --bind "enter:execute:$EDITOR \$(cut -f1-3 -d: {+f})" \
  --bind "ctrl-f:become:x=\$(cut -f1 -d: {+f}); $tmux set-buffer \"\$x\" && echo \"\$x\"" \
  --bind "alt-enter:become:$EDITOR \$(cut -f1-3 -d: {+f})" \
  --bind 'ctrl-space:execute(bat --color=always --highlight-line {2} {1} | less +{2} -j .5 -R)' \
  --bind "ctrl-x:execute(read -p 'rg args> ' -ei \"\$(cat $R)\" && echo \"\${REPLY}\" > $R)" \
  --bind "ctrl-x:+reload:$FZF_DEFAULT_COMMAND" \
  --bind 'ctrl-/:toggle-preview' \
  --bind 'ctrl-s:unbind(change)+clear-query+enable-search+change-prompt(fzf> )' \
  --bind "ctrl-r:change-prompt(regex> )+disable-search+transform-query(cat $Q)+rebind(change)" \
  --bind "f1:execute(grep '^## ' '$0' | cut -f2- -d' ' | less)" \
  --bind 'ctrl-p:execute-silent:url=$(git permalink $(cut -f1 -d: <<<{}) $(cut -f2 -d: <<<{})) && ${container:+flatpak-spawn --host} /usr/bin/xdg-open ${url}'
